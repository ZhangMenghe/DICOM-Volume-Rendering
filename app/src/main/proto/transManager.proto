syntax = "proto3";

option java_multiple_files = true;
option java_package = "helmsley.vr.proto";
option java_outer_classname = "transManagerProto";
option objc_class_prefix = "TRP";

package helmsley;

message configResponse{
    message configInfo{
        string file_name = 1;
        string content = 2;
    }
    repeated configInfo configs = 1;
}

message datasetResponse{
    message datasetInfo{
        string folder_name = 1;
        string patient_name = 2;
        string date = 3;
        string physican_name = 4;
        repeated string mask_folders = 5;
    }
    repeated datasetInfo datasets = 1;
}

message volumeResponse{
    message volumeInfo{
        string folder_name = 1;
        int32 file_nums = 2;
        int32 img_width = 3;
        int32 img_height = 4;
        float vol_thickness = 5;
        bool mask_available = 6;
        float quality_score = 7;
    }
    repeated volumeInfo volumes = 1;
}

message volumeWholeResponse{
    bytes data = 1;
}

message dcmImage{
    int32 dcmID = 1;
    float position = 2;
    bytes data = 3;
}

message Request{
    int32 client_id = 1;
    string req_msg = 2;
}

message RequestWholeVolume{
    int32 client_id = 1;
    string req_msg = 2;
    int32 unit_size = 3;
}

message Response{
    int32 client_id = 1;
    string res_msg = 2;
}

service dataTransfer{
    rpc getAvailableConfigs(Request) returns(configResponse);
    rpc getAvailableDatasets(Request) returns(datasetResponse);
    rpc getVolumeFromDataset(Request) returns(volumeResponse);
    rpc Download(Request) returns (stream dcmImage);
    rpc DownloadVolume(RequestWholeVolume) returns(stream volumeWholeResponse);
    rpc DownloadMasks(Request) returns(stream dcmImage);
    rpc DownloadMasksVolume(Request) returns(stream volumeWholeResponse);
}